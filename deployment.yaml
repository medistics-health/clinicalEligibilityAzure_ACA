#  first create the namespace where ingress is there which is main-ingress
apiVersion: v1 # this is the static version of the namespace, it will always remains the same, it is given to us by kubernetes
kind: Namespace # kind = namespace basically it means as an identifier
metadata: 
  name: ingress-nginx # i am setting the  name  of the namespace, since I know that i am  creating this for the ingress so main-ingress
---
# create the deployment for the service and image should be in ecr repository before this step
apiVersion: apps/v1
kind: Deployment
metadata:
  name: claimmd-deployment # this is basically the pod created, a deployment creates a pod
  namespace: ingress-nginx # I created the namespace earlier so I am creating the deployment in that same namespace 
spec:
  replicas: 1 # it is equal to the number of identical instances of a pod that should be running at a given point of time
  selector:
    matchLabels:
      app: claimmd-api # this is equal to the selector that is used when we create the deployment
  template:
    metadata:
      labels:
        app: claimmd-api #now this template app has to be equal to the above selector that we used
    spec:
      containers:
      - name: claimmd-k8-cluster #name of the newly created cluster 
        image: {{IMAGE_URL}} # always expects the latest code
        # image: 819346998991.dkr.ecr.us-east-2.amazonaws.com/user
        ports: 
          - containerPort: 3000 # your port which you want to expose
        # livenessProbe:
        #   httpGet:
        #     path: /Insuranceeligibility
        #     port: 3000
        #   initialDelaySeconds: 15
        #   periodSeconds: 60
        env: 
        - name: POD_NAME
          value: {{PROJECT}}-ingress
        - name: AZURE_CLIENT_ID
          value: {{AZURE_CLIENT_ID}}
        - name: AZURE_SUBSCRIPTION_ID
          value: {{AZURE_SUBSCRIPTION_ID}}
        - name: AZURE_TENANT_ID
          value: {{AZURE_TENANT_ID}}
        - name: ENVIRONMENT_NAME
          value: {{ENVIRONMENT_NAME}}
        - name: DATABASE_USERNAME
          value: "{{DATABASE_USERNAME}}"
        - name: DATABASE_PASSWORD
          value: "{{DATABASE_PASSWORD}}"
        - name: DATABASE_HOST
          value: "{{DATABASE_HOST}}"
        - name: DATABASE_PORT
          value: "{{DATABASE_PORT}}"
        - name: DATABASE_NAME
          value: "{{DATABASE_NAME}}"
        - name: ACCOUNT_KEY_CLAIMMD
          value: "{{ACCOUNT_KEY_CLAIMMD}}"    
---
# this below is the pod details meaning the sstuff that actually runs the code that why it has nodePortza
# service has to be created to contact with the actual code content, basically api stuff -- interaction with the backend from frontend
apiVersion: v1 #static
kind: Service #static
metadata:
  name: claimmd-service # any name you want for your service, should be unique compared to other services
  namespace: ingress-nginx # same namespace where you are doing everything
spec:
  selector:
    app: claimmd-api # refer to the app which you created 
  ports:
    - name: http # transmission protocol eq. http, ws, https, graphQL 
      port: 80 # http entrance port
      targetPort: 3000 # the port on which your application is working
  type: ClusterIP # type of the service // it can clusterIP -- basically clusterIP means that the api would be exposed in internal cluster and would be accessible by the resources , NodePort, loadBalancer, ExternalName 
